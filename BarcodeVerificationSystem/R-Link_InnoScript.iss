; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "R-Link"
#define MyAppVersion "1.0.7.8"
#define MyAppPublisher "Rynan Technologies"
#define MyAppURL "https://rynantech.com/"
#define MyAppExeName "BarcodeVerificationSystem.exe"
#define MyAppAssocName MyAppName + " File"
#define MyAppAssocExt ".myp"
#define MyAppAssocKey StringChange(MyAppAssocName, " ", "") + MyAppAssocExt
#define MyAppDateTimeRelease "250816"

//Delete old folder first (ProgramData/R-Link)
[Code]
procedure DeleteOldFolder(const FolderPath: string);
//var
//  OldFolderPath: string;
begin
  //OldFolderPath := ExpandConstant('{commonappdata}\R-Link');
  if DirExists(FolderPath) then
  begin
    if DelTree(FolderPath, True, True, True) then
    begin
      Log('Old folder deleted successfully.');
    end
    else
    begin
      Log('Failed to delete old folder.');
    end;
  end
  else
  begin
    Log('Old folder does not exist.');
  end;
end;

function InitializeSetup(): Boolean;
var
  OldFolderPath_Settings: string;   //C:\ProgramData\R-Link\Settings
var
  OldFolderPath_Accounts: string;   //C:\ProgramData\R-Link\Accounts
begin
  OldFolderPath_Settings := ExpandConstant('{commonappdata}\R-Link\Settings');
  OldFolderPath_Accounts := ExpandConstant('{commonappdata}\R-Link\Accounts');
  // Call the function to delete the old folder
  DeleteOldFolder(OldFolderPath_Settings);
  DeleteOldFolder(OldFolderPath_Accounts);
  // Proceed with the installation
  Result := True;
end;
////////////////////////////////////////////////////////////////////////////////////////////////

[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{51AA0210-1E57-4EFC-A212-D81203799976}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
DefaultDirName={autopf}\{#MyAppName}
// Split name and version in Uninstall Program
UninstallDisplayName={#MyAppName} 
ChangesAssociations=yes
DisableProgramGroupPage=yes
// icon for unintsall
UninstallDisplayIcon={app}\logores.ico  
; Uncomment the following line to run in non administrative install mode (install for current user only.)
;PrivilegesRequired=lowest
OutputDir=SoftwareInstaller
OutputBaseFilename=R_Link_Setup64_{#MyAppVersion}_{#MyAppDateTimeRelease}
SetupIconFile=logores.ico
Compression=lzma
SolidCompression=yes
WizardStyle=modern
PrivilegesRequired=admin

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked

[Files]
Source: "bin\Release\{#MyAppExeName}"; DestDir: "{app}"; Flags: ignoreversion
Source: "bin\Release\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs; Excludes: "*.pdb, *.config";
Source: "vcredist2010_x86.exe"; DestDir: "{tmp}"; Flags: ignoreversion; Check: not IsVCRedistInstalled
; NOTE: Don't use "Flags: ignoreversion" on any shared system files

;Add file logoresico into the installation directory
Source: "logores.ico"; DestDir: "{app}"; Flags: ignoreversion  

[Registry]
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocExt}\OpenWithProgids"; ValueType: string; ValueName: "{#MyAppAssocKey}"; ValueData: ""; Flags: uninsdeletevalue
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocKey}"; ValueType: string; ValueName: ""; ValueData: "{#MyAppAssocName}"; Flags: uninsdeletekey
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocKey}\DefaultIcon"; ValueType: string; ValueName: ""; ValueData: "{app}\{#MyAppExeName},0"
Root: HKA; Subkey: "Software\Classes\{#MyAppAssocKey}\shell\open\command"; ValueType: string; ValueName: ""; ValueData: """{app}\{#MyAppExeName}"" ""%1"""
Root: HKA; Subkey: "Software\Classes\Applications\{#MyAppExeName}\SupportedTypes"; ValueType: string; ValueName: ".myp"; ValueData: ""

//Add icon to registry
Root: HKLM; Subkey: "Software\Microsoft\Windows\CurrentVersion\Uninstall\{#MyAppName}"; ValueType: string; ValueName: "DisplayIcon"; ValueData: "{app}\{#MyAppExeName}"; Flags: uninsdeletevalue

[Icons]
Name: "{autoprograms}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"
Name: "{autodesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; Tasks: desktopicon
Name: "{group}\Uninstall {#MyAppName}"; Filename: "{uninstallexe}"

[Run]
Filename: "{tmp}\vcredist2010_x86.exe"; Parameters: "/install /quiet /norestart"; Check: not IsVCRedistInstalled; StatusMsg: "Install Visual C++ Redistributable 2010 x86..."
Filename: "{app}\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: postinstall shellexec runasoriginaluser
 ;Filename: "{app}\{#MyAppExeName}"; Description: "{cm:LaunchProgram,{#StringChange(MyAppName, '&', '&&')}}"; Flags: nowait postinstall runasoriginaluser
 
 // --Check VCRedist installation--//
[Code]
function IsVCRedistInstalled(): Boolean;
var
    Installed: Cardinal;
begin
   // Change the key below depending on version and architecture (x86/x64)
    if RegQueryDWordValue(HKLM, 'SOFTWARE\WOW6432Node\Microsoft\VisualStudio\10.0\VC\VCRedist\x86', 'Installed', Installed) then
    begin
        Result := Installed = 1;
    end
    else
        Result := False;
end;
